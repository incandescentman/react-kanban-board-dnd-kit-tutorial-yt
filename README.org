* Rising Action Kanban

A powerful, local-first kanban board application for managing tasks, projects, and daily intentions with a rich feature set designed for power users.

** Features

*** Board & Project Management
- *Multi-Board Support*: Manage multiple, distinct kanban boards for different projects or contexts.
- *Board Management*: Create, delete, rename, and reorder your boards.
- *Persistent Storage*: All boards, tasks, and notes are automatically saved to your browser's =localStorage=.
- *Resilient Board List*: If the board tabs ever appear empty (e.g., after a hot reload), the app auto-restores the list from =localStorage=, preserving your saved order.

*** Data Portability
- *Export to JSON*: Download all your boards, tasks, and notes into a single, human-readable JSON file for backups or manual editing.
- *Import from JSON*: Load your entire workspace from a JSON file, with a confirmation step to prevent accidental data loss.

*** Columns and Tasks
- *Columns*: Create, delete, rename, and reorder columns. Customize columns with background colors.
- *Tasks*: Create, edit, and delete tasks with full undo/redo support.
- *Drag & Drop*: Intuitively move tasks between columns, reorder them within a column, and organize them into groups.
- *Task Completion*: Mark tasks as complete with a single click.

*** Advanced Organization
- *Task Groups (Headings)*: Automatically create sub-groups of tasks by starting a task with Markdown heading syntax (e.g., =# My Group=). Any list items below it will become tasks in that group.
- *Tagging*: Add tags to tasks using the =#tag= syntax. 
- *Tag View*: See all tasks across the board that share a specific tag in a dedicated view.

*** Power-User Features
- *Command Palette (⌘K)*: A pop-up palette to quickly access key actions like adding columns, toggling views, and more.
- *Undo/Redo (⌘Z, ⌘Y)*: A robust undo/redo system for actions like task, column, and board deletion.
- *Select Mode*: A special mode to select multiple tasks at once for batch deletion.
- *Full Keyboard Navigation*: Move between tasks with arrow keys, move tasks with =Ctrl+Arrow=, and use various shortcuts for maximum efficiency.

*** Views & Panels
- *Board View*: The primary kanban interface.
- *If‑Then*: A dedicated page that renders implementation intentions from =implementation-intentions.org=. Each line is split into explicit "If" and "Then" sections (except "Master Mantras", which remains a simple list).
- *Thought → Reframe*: A companion page pairing common thoughts with reframes/mantras to deploy on the spot.
- *Priorities View*: A dedicated view to manage and import top priorities (currently hidden but component preserved - Board/Priorities toggle code commented out but intact).
- *Values View*: A space to keep your personal or project values front and center.
- *Intentions Panel*: A sidebar panel with timeline-style layout to list and manage your daily intentions or habits. Features drag-and-drop reordering and inline editing.
- *Top Priorities Panel*: Compact sidebar panel showing top 6 priorities with timeline design, drag-and-drop reordering, inline editing, delete on hover, add button, and undo support (Cmd+Z).
- *Notes Section*: A dedicated space at the bottom of the board for general notes.
- *Keyboard Shortcut Legend ( ? )*: A popup that displays all available keyboard shortcuts.

** Tech Stack

- React 18 with TypeScript
- Dnd-Kit for drag and drop functionality
- TailwindCSS for styling
- Vite for build tooling

** Getting Started

1. Clone the repository
2. Install dependencies:
   #+BEGIN_SRC shell
   npm install
   #+END_SRC
3. Start the development server:
   #+BEGIN_SRC shell
   npm run dev
   #+END_SRC
4. Open your browser to =http://localhost:5173=

** UI Notes

- View tabs and board picker share a unified selection style (white on navy). Inactive tabs are navy text with a soft blue hover.
- Keyboard shortcuts: ⌘/Ctrl+1 → Boards, ⌘/Ctrl+2 → If‑Then, ⌘/Ctrl+3 → Thought → Reframe.

** Backup & Restore (JSON)

- Export: Use the Data Management panel to download a single JSON file containing all boards, board order, notes, intentions, and pinned priorities.
- Edit: You can hand‑edit the JSON (board titles, columns, tasks) if needed.
- Import: Use the Data Management panel to import; the app overwrites existing board data and reloads.

** Tests

- Run tests:
  #+BEGIN_SRC shell
  npm run test
  #+END_SRC
- What’s covered:
  - Export/Import data round‑trip via =src/lib/dataTransfer.ts= using a fake =localStorage=.
  - Publish HTML generation for single and multi-board exports.

** Troubleshooting

- Board tabs disappeared after a reload
  - Try a hard refresh (Cmd+Shift+R). The app will repopulate boards from =localStorage= if the in-memory list is empty.
  - Validate your data: =Object.keys(localStorage).filter(k => k.startsWith('kanban-board-state'))=
  - Check order list: =localStorage.getItem('kanban-board-order')= should be a JSON array of board keys.
